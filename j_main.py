"""
DISCORD.PY 2.0 BOT ONLY FOR parad0x
cd /D D:\\sus\\py\\jett

pip install discord
pip install humanfriendly
"""
# ==============================================================================

from typing import Optional

import json
import discord
from discord.ui import Select, ChannelSelect, View
from discord import app_commands
from discord import Spotify
import j_token
import j_mechanics

import datetime
from humanfriendly import format_timespan, parse_timespan

# ==============================================================================

MY_GUILD = discord.Object(id=1097987434253385810)  # parad0x server id
MY_TOKEN = j_token.mama_TOKEN()  # bot's token

# ==============================================================================

class MyClient(discord.Client):
    def __init__(self, *, intents: discord.Intents):
        super().__init__(intents=intents)

        self.tree = app_commands.CommandTree(self)  # command tree for sync

    async def setup_hook(self):  # copy the global commands over to your guild
        self.tree.copy_global_to(guild=MY_GUILD)
        await self.tree.sync(guild=MY_GUILD)

intents = discord.Intents.all()
intents.members = True
client = MyClient(intents=intents)

# ==============================================================================
"""
ON READY
"""
@client.event
async def on_ready():
    print(f"–ó–∞–ª–æ–≥–∏–Ω–∏–ª–∞—Å—å –∫–∞–∫ {client.user} (–∞–π–¥–∏: {client.user.id})")
    guild = client.get_guild(MY_GUILD)
    await client.change_presence(status=discord.Status.online, 
                              activity=discord.Streaming(name="VALORANT", url="https://www.twitch.tv/3wpty"))



# ==============================================================================
"""
EMBED:
    only for staff
"""
@client.tree.command(name="embed")
@app_commands.checks.has_permissions(ban_members=True)
@app_commands.describe(title="–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞", 
                       description="–û–ø–∏—Å–∞–Ω–∏–µ –æ–∫–Ω–∞", 
                       image_url="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏ –æ–∫–Ω–∞ –ø–æ–¥ –æ–ø–∏—Å–∞–Ω–∏–µ–º")

async def cmd_send_embed(interaction: discord.Interaction, 
                     title: str, 
                     description: Optional[str] = None, 
                     image_url: Optional[str] = None):
    """ADMIN ONLY // –°–æ–∑–¥–∞—Ç—å –æ–∫–Ω–æ-–≤—Å—Ç–∞–≤–∫—É """

    emb = discord.Embed(title=title, description=description, color=0x2f3136)  # make embed
    emb.set_image(url=image_url)  # image
    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message(embed=emb)  # sending embed



# ==============================================================================
"""
VOTING:
    for all users
"""
@client.tree.command(name="vote")
@app_commands.describe(description="–¢–≤–æ—ë –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ —Å–µ—Ä–≤–µ—Ä—É", 
                       image_url="–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ —Ç–µ–±–µ –Ω–∞–¥–æ")

async def cmd_vote(interaction: discord.Interaction,
               description: str, 
               image_url: Optional[str] = None):
    """–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–æ–ø—Ä–æ—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ª—é–±—É—é —Ç–µ–º—É"""

    emb = discord.Embed(title=f"–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ #{j_mechanics.vote_number_mecha()}", description=description, color=0x2f3136)
    emb.set_image(url=image_url)  # image
    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message("–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ!", ephemeral=True)  # sending message if ok

    channel = client.get_channel(1098682161101545532)  # special channel for votes
    message = await channel.send(embed=emb)  # sending embed
    await message.add_reaction("üîº")  # adding reaction up to message
    await message.add_reaction("üîΩ")  # adding reaction down to message



# ==============================================================================
"""
MUTE:
    for mods and staff
"""
@client.tree.command(name="mute")
@app_commands.checks.has_permissions(view_audit_log=True)
@app_commands.describe(member="–ß–µ–ª, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å –∑–∞–º—É—Ç–∏—Ç—å", 
                       time="–í—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ 1s/1m/1h/1d",
                       reason="–ü—Ä–∏—á–∏–Ω–∞ –º—É—Ç–∞")

async def cmd_mute(interaction: discord.Interaction,
               member: discord.Member, 
               time: str, 
               reason: Optional[str] = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
    """MOD ONLY // –í—ã–¥–∞—Ç—å –º—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç"""

    time = parse_timespan(time)  # converting time
    await member.timeout(discord.utils.utcnow()+datetime.timedelta(seconds=time), reason=reason)  # mute user

    emb = discord.Embed(title='–ú—É—Ç!', 
                        description=f'{member.mention} poly4aet myt na {format_timespan(time)}', 
                        color=0xff0800)
    emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∞', value=f'\n**`{reason}`**')  # reason
    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message(embed=emb, ephemeral=True)  # sending message if ok
    message = await interaction.guild.get_channel(1098697565593145344).send(embed=emb)  # sending embed to log channel



# ==============================================================================
"""
UNMUTE:
    for mods and staff
"""
@client.tree.command(name="unmute")
@app_commands.checks.has_permissions(view_audit_log=True)
@app_commands.describe(member="–ß–µ–ª, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—á–µ—à—å —Ä–∞–∑–º—É—Ç–∏—Ç—å")

async def cmd_unmute(interaction: discord.Interaction,
                 member: discord.Member):
    """MOD ONLY // –†–∞–∑–º—É—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Ç–∞–π–º–∞—É—Ç"""

    await member.timeout(discord.utils.utcnow()+datetime.timedelta(seconds=1))  # unmute user

    emb = discord.Embed(title='–ê–Ω–º—É—Ç!', 
                        description=f'{member.mention} —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å', 
                        color=0xff0800)
    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message(embed=emb, ephemeral=True)  # sending message if ok
    message = await interaction.guild.get_channel(1098697565593145344).send(embed=emb)  # sending embed to log channel



# ==============================================================================
"""
WARN:
    for mods and staff
"""
@client.tree.command(name="warn")
@app_commands.checks.has_permissions(view_audit_log=True)
@app_commands.describe(member="–ß–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—É—á–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", 
                       reason="–ü—Ä–∏—á–∏–Ω–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è")

async def cmd_warn(interaction: discord.Interaction,
               member: discord.Member,
               reason: Optional[str] = "–ü—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞"):
    """MOD ONLY // –í—ã–¥–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é (4 –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è = –º—É—Ç –Ω–∞ 6 —á–∞—Å–æ–≤)"""

    warns_count, more_than_two = j_mechanics.warn_mecha(member.id)  # how many warns
    if more_than_two:  # if user has 4 warns
        await member.timeout(discord.utils.utcnow()+datetime.timedelta(hours=6), reason="–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")  # mute user
        emb = discord.Embed(title='–ú—É—Ç!', 
                            description=f'{member.mention} –ø–æ–ª—É—á–∞–µ—Ç –º—É—Ç –Ω–∞ 6 —á–∞—Å–æ–≤ –∑–∞ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è', 
                            color=0xff0800)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∞', value=f'\n**`{reason}`**')  # reason
        emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    else:
        emb = discord.Embed(title='–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ!', 
                            description=f'{member.mention} –ø–æ–ª—É—á–∞–µ—Ç —Å–≤–æ—ë {warns_count} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', 
                            color=0xff0800)
        emb.add_field(name='–ü—Ä–∏—á–∏–Ω–∞', value=f'\n**`{reason}`**')  # reason
        emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message(embed=emb, ephemeral=True)  # sending message if ok
    message = await interaction.guild.get_channel(1098697565593145344).send(embed=emb)  # sending embed to log channel



# ==============================================================================
"""
CREATING ROLE:
    for all users
"""
@client.tree.command(name="add-custom-role")
@app_commands.describe(name="–ù–∞–∑–≤–∞–Ω–∏–µ —Ç–≤–æ–µ–π —Ä–æ–ª–∏",
                       color="–õ—é–±–æ–π —Ü–≤–µ—Ç —Ä–æ–ª–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ rrggbb (–ü—Ä–∏–º–µ—Ä: –∫—Ä–∞—Å–Ω—ã–π - `ff0000`, –≥–æ–ª—É–±–æ–π - `6ed8f0`)")

async def cmd_add_custom_role(interaction: discord.Interaction, 
                      name: str, 
                      color: str):
    """–°–æ–∑–¥–∞—Ç—å —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–æ–ª—å (—Å–≤–æ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–≤–µ—Ç)"""


    if color == "420":  # if no some of args

        emb = discord.Embed(title=":warning:**–û—à–∏–±–∫–∞!**",
                            description="–¶–≤–µ—Ç —É–∫–∞–∑–∞–Ω –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ",
                            color=0xffcc4d)

    else:  # if Ok
        role_already_exist = j_mechanics.role_mecha(interaction.user.id)  # role already exist or not

        if role_already_exist:  # if user already have custom role
            role_id = j_mechanics.role_id_mecha(interaction.user.id)  # finding id of role from json file
            role = interaction.guild.get_role(role_id)  # getting role object
            role = await role.edit(name=name, color=int(f"0x{color}", 16), position=(len(interaction.guild.roles)-5))  # editing role
            await interaction.user.add_roles(role)  # give role to the user


        else:

            role = await interaction.guild.create_role()  # creating role
            role = await role.edit(name=name, color=int(f"0x{color}", 16), position=(len(interaction.guild.roles)-5))  # editing role
            j_mechanics.role_id_mecha(interaction.user.id, role.id)  # save role id to json file
            await interaction.user.add_roles(role)  # give role to the user

        emb = discord.Embed(title='–†–æ–ª—å —Å–¥–µ–ª–∞–Ω–∞!', 
                            description=f'{interaction.user.mention} —Å–¥–µ–ª–∞–ª —Å–µ–±–µ —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–æ–ª—å: <@&{role.id}>', 
                            color=0x77b255)

    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message(embed=emb)  # sending embed
    message = await interaction.guild.get_channel(1098697565593145344).send(embed=emb)  # sending embed to log channel




# ==============================================================================
"""
DELETING CREATED ROLE:
    for all users
"""
@client.tree.command(name="remove-custom-role")
@app_commands.describe(confirm="–ù–∞–ø–∏—à–∏ `yes` –±–µ–∑ –∫–∞–≤—ã—á–µ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏")

async def cmd_remove_custom_role(interaction: discord.Interaction, 
                      confirm: str):
    """–£–¥–∞–ª–∏—Ç—å —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–æ–ª—å (–ø–æ—Ç–æ–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é)"""

    if confirm != "yes":  # if no some of args

        emb = discord.Embed(title=":warning:**–û—à–∏–±–∫–∞!**",
                            description="–ù–∞–ø–∏—à–∏ `yes` –≤ –ø–æ–ª–µ **confirm** —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é —Ä–æ–ª—å",
                            color=0xffcc4d)

    else:  # if Ok
        role_already_exist = j_mechanics.role_mecha(interaction.user.id)  # role already exist or not

        if role_already_exist:  # if user already have custom role
            role_id = j_mechanics.role_id_mecha(interaction.user.id)  # finding id of role from json file
            role = interaction.guild.get_role(role_id)  # getting role object
            await interaction.user.remove_roles(role)  # give role to the user

            emb = discord.Embed(title='–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞!', 
                                description=f'{interaction.user.mention} —É–¥–∞–ª–∏–ª —Å–≤–æ—é —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Ä–æ–ª—å', 
                                color=0x77b255)

        else:

            emb = discord.Embed(title=":warning:**–û—à–∏–±–∫–∞!**",
                            description="–£ —Ç–µ–±—è –Ω–µ—Ç –∫–∞—Å—Ç–æ–º–Ω–æ–π —Ä–æ–ª–∏",
                            color=0xffcc4d)


    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    await interaction.response.send_message(embed=emb)  # sending embed
    message = await interaction.guild.get_channel(1098697565593145344).send(embed=emb)  # sending embed to log channel



# ==============================================================================
"""
REPORT MESSAGE:
    for all users
    context menu
"""
@client.tree.context_menu(name="„Éª –†–µ–ø–æ—Ä—Ç")
async def cmd_report_message(interaction: discord.Interaction, 
                         message: discord.Message):
    await interaction.response.send_message(f'–¢–≤–æ—è –∂–∞–ª–æ–±–∞ –Ω–∞ {message.author.mention} –ø–µ—Ä–µ–¥–∞–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º <3', ephemeral=True)

    date_created = f"{message.created_at.day}.{message.created_at.month}.{message.created_at.year} –≤ {message.created_at.hour}:{message.created_at.minute}"
    emb = discord.Embed(title=f'–†–µ–ø–æ—Ä—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ {message.author} \n(–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {date_created})', description=f"–ü—Ä–æ–≤–∏–Ω–∏–≤—à–∏–π—Å—è: {message.author}")
    if message.content:
        emb.description = message.content

    emb.set_thumbnail(url=message.author.display_avatar)  # who was reported
    emb.set_footer(text=f"–ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: {interaction.user}", icon_url=interaction.user.display_avatar)  # who called it

    url_view = discord.ui.View()
    url_view.add_item(discord.ui.Button(label='–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é', style=discord.ButtonStyle.url, url=message   .jump_url))

    await interaction.guild.get_channel(1097987607838859416).send(embed=emb, view=url_view)  # sending embed to moderator channel



# ==============================================================================
#                 RUN
#                 RUN
#                 RUN
client.run(j_token.mama_TOKEN())
#                 RUN
#                 RUN
#                 RUN
